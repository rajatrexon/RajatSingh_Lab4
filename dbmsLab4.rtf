{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset0 Arial;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 create database order_directory;\par
use order_directory;\par
\par
-- Q1 create tables--\par
\par
CREATE TABLE IF NOT EXISTS supplier(\par
SUPP_ID int primary key,\par
SUPP_NAME varchar(50) NOT NULL,\par
SUPP_CITY varchar(50),\par
SUPP_PHONE varchar(10) NOT NULL\par
);\par
\par
CREATE TABLE IF NOT EXISTS customer(\par
CUS_ID INT NOT NULL,\par
CUS_NAME VARCHAR(20) NOT NULL,\par
CUS_PHONE VARCHAR(10) NOT NULL,\par
CUS_CITY varchar(30) NOT NULL,\par
CUS_GENDER CHAR,\par
PRIMARY KEY (CUS_ID));\par
\par
CREATE TABLE IF NOT EXISTS category (\par
CAT_ID INT NOT NULL,\par
CAT_NAME VARCHAR(20) NOT NULL,\par
PRIMARY KEY (CAT_ID)\par
);\par
\par
CREATE TABLE IF NOT EXISTS product (\par
PRO_ID INT NOT NULL,\par
PRO_NAME VARCHAR(20) NOT NULL DEFAULT "Dummy",\par
PRO_DESC VARCHAR(60),\par
CAT_ID INT NOT NULL,\par
PRIMARY KEY (PRO_ID),\par
FOREIGN KEY (CAT_ID) REFERENCES CATEGORY (CAT_ID)\par
);\par
\par
CREATE TABLE IF NOT EXISTS supplier_pricing (\par
PRICING_ID INT NOT NULL,\par
PRO_ID INT NOT NULL,\par
SUPP_ID INT NOT NULL,\par
SUPP_PRICE INT DEFAULT 0,\par
PRIMARY KEY (PRICING_ID),\par
FOREIGN KEY (PRO_ID) REFERENCES PRODUCT (PRO_ID),\par
FOREIGN KEY (SUPP_ID) REFERENCES SUPPLIER(SUPP_ID)\par
);\par
\par
CREATE TABLE IF NOT EXISTS `order` (\par
ORD_ID INT NOT NULL,\par
ORD_AMOUNT INT NOT NULL,\par
ORD_DATE DATE,\par
CUS_ID INT NOT NULL,\par
PRICING_ID INT NOT NULL,\par
PRIMARY KEY (ORD_ID),\par
FOREIGN KEY (CUS_ID) REFERENCES CUSTOMER(CUS_ID),\par
FOREIGN KEY (PRICING_ID) REFERENCES SUPPLIER_PRICING(PRICING_ID)\par
);\par
\par
CREATE TABLE IF NOT EXISTS rating (\par
RAT_ID INT NOT NULL,\par
ORD_ID INT NOT NULL,\par
RAT_RATSTARS INT NOT NULL,\par
PRIMARY KEY (RAT_ID),\par
FOREIGN KEY (ORD_ID) REFERENCES `order`(ORD_ID)\par
);\par
\par
-- Q2 INSERT INTO TABLE --\par
\par
INSERT INTO SUPPLIER VALUES(1,"Rajesh Retails","Delhi",'1234567890');\par
INSERT INTO SUPPLIER VALUES(2,"Appario Ltd.","Mumbai",'2589631470');\par
INSERT INTO SUPPLIER VALUES(3,"Knome products","Banglore",'9785462315');\par
INSERT INTO SUPPLIER VALUES(4,"Bansal Retails","Kochi",'8975463285');\par
INSERT INTO SUPPLIER VALUES(5,"Mittal Ltd.","Lucknow",'7898456532');\par
\par
INSERT INTO CUSTOMER VALUES(1,"AAKASH",'9999999999',"DELHI",'M');\par
INSERT INTO CUSTOMER VALUES(2,"AMAN",'9785463215',"NOIDA",'M');\par
INSERT INTO CUSTOMER VALUES(3,"NEHA",'9999999999',"MUMBAI",'F');\par
INSERT INTO CUSTOMER VALUES(4,"MEGHA",'9994562399',"KOLKATA",'F');\par
INSERT INTO CUSTOMER VALUES(5,"PULKIT",'7895999999',"LUCKNOW",'M');\par
\par
INSERT INTO CATEGORY VALUES( 1,"BOOKS");\par
INSERT INTO CATEGORY VALUES(2,"GAMES");\par
INSERT INTO CATEGORY VALUES(3,"GROCERIES");\par
INSERT INTO CATEGORY VALUES (4,"ELECTRONICS");\par
INSERT INTO CATEGORY VALUES(5,"CLOTHES");\par
\par
INSERT INTO PRODUCT VALUES(1,"GTA V","Windows 7 and above with i5 processor and 8GB RAM",2);\par
INSERT INTO PRODUCT VALUES(2,"TSHIRT","SIZE-L with Black, Blue and White variations",5);\par
INSERT INTO PRODUCT VALUES(3,"ROG LAPTOP","Windows 10 with 15inch screen, i7 processor, 1TB SSD",4);\par
INSERT INTO PRODUCT VALUES(4,"OATS","Highly Nutritious from Nestle",3);\par
INSERT INTO PRODUCT VALUES(5,"HARRY POTTER","Best Collection of all time by J.K Rowling",1);\par
INSERT INTO PRODUCT VALUES(6,"MILK","1L Toned MIlk",3);\par
INSERT INTO PRODUCT VALUES(7,"Boat EarPhones","1.5Meter long Dolby Atmos",4);\par
INSERT INTO PRODUCT VALUES(8,"Jeans","Stretchable Denim Jeans with various sizes and color",5);\par
INSERT INTO PRODUCT VALUES(9,"Project IGI","compatible with windows 7 and above",2);\par
INSERT INTO PRODUCT VALUES(10,"Hoodie","Black GUCCI for 13 yrs and above",5);\par
INSERT INTO PRODUCT VALUES(11,"Rich Dad Poor Dad","Written by RObert Kiyosaki",1);\par
INSERT INTO PRODUCT VALUES(12,"Train Your Brain","By Shireen Stephen",1);\par
\par
INSERT INTO SUPPLIER_PRICING VALUES(1,1,2,1500);\par
INSERT INTO SUPPLIER_PRICING VALUES(2,3,5,30000);\par
INSERT INTO SUPPLIER_PRICING VALUES(3,5,1,3000);\par
INSERT INTO SUPPLIER_PRICING VALUES(4,2,3,2500);\par
INSERT INTO SUPPLIER_PRICING VALUES(5,4,1,1000);\par
INSERT INTO SUPPLIER_PRICING VALUES(6,12,2,780);\par
INSERT INTO SUPPLIER_PRICING VALUES(7,12,4,789);\par
INSERT INTO SUPPLIER_PRICING VALUES(8,3,1,31000);\par
INSERT INTO SUPPLIER_PRICING VALUES(9,1,5,1450);\par
INSERT INTO SUPPLIER_PRICING VALUES(10,4,2,999);\par
INSERT INTO SUPPLIER_PRICING VALUES(11,7,3,549);\par
INSERT INTO SUPPLIER_PRICING VALUES(12,7,4,529);\par
INSERT INTO SUPPLIER_PRICING VALUES(13,6,2,105);\par
INSERT INTO SUPPLIER_PRICING VALUES(14,6,1,99);\par
INSERT INTO SUPPLIER_PRICING VALUES(15,2,5,2999);\par
INSERT INTO SUPPLIER_PRICING VALUES(16,5,2,2999);\par
\par
INSERT INTO `ORDER` VALUES (101,1500,"2021-10-06",2,1);\par
INSERT INTO `ORDER` VALUES(102,1000,"2021-10-12",3,5);\par
INSERT INTO `ORDER` VALUES(103,30000,"2021-09-16",5,2);\par
INSERT INTO `ORDER` VALUES(104,1500,"2021-10-05",1,1);\par
INSERT INTO `ORDER` VALUES(105,3000,"2021-08-16",4,3);\par
INSERT INTO `ORDER` VALUES(106,1450,"2021-08-18",1,9);\par
INSERT INTO `ORDER` VALUES(107,789,"2021-09-01",3,7);\par
INSERT INTO `ORDER` VALUES(108,780,"2021-09-07",5,6);\par
INSERT INTO `ORDER` VALUES(109,3000,"2021-09-10",5,3);\par
INSERT INTO `ORDER` VALUES(110,2500,"2021-09-10",2,4);\par
INSERT INTO `ORDER` VALUES(111,1000,"2021-09-15",4,5);\par
INSERT INTO `ORDER` VALUES(112,789,"2021-09-16",4,7);\par
INSERT INTO `ORDER` VALUES(113,31000,"2021-09-16",1,8);\par
INSERT INTO `ORDER` VALUES(114,1000,"2021-09-16",3,5);\par
INSERT INTO `ORDER` VALUES(115,3000,"2021-09-16",5,3);\par
INSERT INTO `ORDER` VALUES(116,99,"2021-09-17",2,14);\par
\par
INSERT INTO RATING VALUES(1,101,4);\par
INSERT INTO RATING VALUES(2,102,3);\par
INSERT INTO RATING VALUES(3,103,1);\par
INSERT INTO RATING VALUES(4,104,2);\par
INSERT INTO RATING VALUES(5,105,4);\par
INSERT INTO RATING VALUES(6,106,3);\par
INSERT INTO RATING VALUES(7,107,4);\par
INSERT INTO RATING VALUES(8,108,4);\par
INSERT INTO RATING VALUES(9,109,3);\par
INSERT INTO RATING VALUES(10,110,5);\par
INSERT INTO RATING VALUES(11,111,3);\par
INSERT INTO RATING VALUES(12,112,4);\par
INSERT INTO RATING VALUES(13,113,2);\par
INSERT INTO RATING VALUES(14,114,1);\par
INSERT INTO RATING VALUES(15,115,1);\par
INSERT INTO RATING VALUES(16,116,0);\par
\par
-- Display the total number of customers based on gender who have placed orders of worth at least Rs.3000--\par
\par
SELECT \par
    COUNT(cus_gender) AS Total_customers\par
FROM\par
    customer\par
        INNER JOIN\par
    (SELECT DISTINCT\par
        cus_id\par
    FROM\par
        `order`\par
    WHERE\par
        ORD_AMOUNT >= 3000) AS t1\par
WHERE\par
    t1.cus_id = customer.cus_id\par
GROUP BY cus_gender;\par
\par
-- Display all the orders along with product name ordered by a customer having Customer_Id=2--\par
\par
SELECT \par
    product.PRO_NAME, `order`.*\par
FROM\par
    `order`,\par
    supplier_pricing,\par
    product,\par
    customer\par
WHERE\par
    customer.cus_id = 2\par
        AND customer.cus_id = `order`.cus_id\par
        AND `order`.pricing_id = supplier_pricing.pricing_id\par
        AND supplier_pricing.pro_id = product.pro_id;\par
\par
-- Display the Supplier details who can supply more than one product.--\par
\par
SELECT \par
    supplier.*\par
FROM\par
    supplier\par
WHERE\par
    supplier.supp_id IN (SELECT \par
            supp_id\par
        FROM\par
            supplier_pricing\par
        GROUP BY supp_id\par
        HAVING COUNT(supp_id) > 1)\par
GROUP BY supplier.supp_id;\par
\par
-- Find the least expensive product from each category and print the table with category id, category name, product name and price of the product --\par
select  t3.pro_name, min(t3.min_price)as Min_price,category.cat_id,category.cat_name from category inner join\par
(select t2.min_price,product.pro_name , product.cat_id from product inner join\par
(select pro_id, min(supp_price) as Min_Price from supplier_pricing group by pro_id) as t2 where t2.pro_id = product.pro_id) as t3  where t3.cat_id = category.cat_id group by cat_id;\par
\par
-- Display the Id and Name of the Product ordered after \ldblquote 2021-10-05\rdblquote --\par
\par
select product.pro_id, product.pro_name from product inner join\par
(select supplier_pricing.pro_id from supplier_pricing inner join\par
(select `order`.pricing_id from`order` where ord_date > '2021-10-05') as t4 where t4.pricing_id= supplier_pricing.pricing_id) as t5 where t5.pro_id = product.pro_id ;\par
\par
-- Display customer name and gender whose names start or end with character 'A'--\par
\par
SELECT \par
    customer.cus_name, customer.cus_gender\par
FROM\par
    customer\par
WHERE\par
    customer.cus_name LIKE 'A%'\par
        OR customer.cus_name LIKE '%A';\par
\par
\par
\par
-- Create a stored procedure to display supplier id, name, rating and Type_of_Service.\par
-- For Type_of_Service, If rating =5, print \ldblquote Excellent Service\rdblquote ,If rating >4 print \ldblquote Good Service\rdblquote , If rating >2 print \ldblquote Average Service\rdblquote  else print \ldblquote Poor Service\rdblquote --\par

\pard\sl276\slmult1\f1\par
\par
CREATE DEFINER=`root`@`localhost` PROCEDURE `proc`()\par
BEGIN\par
select report.supp_id,report.supp_name,report.Average,\par
CASE\par
WHEN report.Average =5 THEN 'Excellent Service'\par
WHEN report.Average >4 THEN 'Good Service'\par
WHEN report.Average >2 THEN 'Average Service'\par
ELSE 'Poor Service'\par
END AS Type_of_Service from\par
(select final.supp_id, supplier.supp_name, final.Average from\par
(select test2.supp_id, sum(test2.rat_ratstars)/count(test2.rat_ratstars) as Average from\par
(select supplier_pricing.supp_id, test.ORD_ID, test.RAT_RATSTARS from supplier_pricing inner join\par
(select `order`.pricing_id, rating.ORD_ID, rating.RAT_RATSTARS from `order` inner join rating on rating.`ord_id` = `order`.ord_id ) as test\par
on test.pricing_id = supplier_pricing.pricing_id)\par
as test2 group by supplier_pricing.supp_id)\par
as final inner join supplier where final.supp_id = supplier.supp_id) as report;\par
END\b\fs24\par

\pard\sa200\sl276\slmult1\b0\f0\fs22\par
call proc();\par
\par
}
 